[tox]
envlist = py36,py35,py27,pep8
minversion = 2.0
skipsdist = True

[testenv]
# Note the hash seed is set to 0 until neutron can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
         OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
         OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
         PYTHONWARNINGS=default::DeprecationWarning,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:site

usedevelop = True
install_command = pip install -U {opts} {packages}
deps = -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/stein}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  stestr run {posargs}
  stestr slowest

[testenv:functional]
deps =
  {[testenv]deps}
  -r{toxinidir}/networking_bigswitch/tests/functional/requirements.txt
commands =
  {toxinidir}/tools/deploy_rootwrap.sh {toxinidir} {envdir}/etc {envbindir}

[testenv:hashtest]
basepython = python3
# This is the same as default environment, but with a random PYTHONHASHSEED.
# You can also specify a specific hashseed (for test repeatability) as follows:
#   tox --hashseed 1235130571 -e hashtest
setenv = VIRTUAL_ENV={envdir}

[tox:jenkins]
sitepackages = True

[testenv:pep8]
basepython = python3
commands =
  # If it is easier to add a check via a shell script, consider adding it in this file
  flake8
whitelist_externals = sh

[testenv:cover]
basepython = python3
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source openstack --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
commands = sphinx-build -W -d doc/build/doctrees -b html doc/source/ doc/build/html

[flake8]
# I100: Import statements are in the wrong order
# I201: Missing newline before sections or imports
# N530: direct neutron imports not allowed
# N536: Use assertIsNone rather than assertEqual to check for None values
# N537: Log messages should not be translated!
ignore = I100,I201,N530,N536,N537
# H106: Donâ€™t put vim configuration in source files
# H203: Use assertIs(Not)None to check for None
# H904: Delay string interpolations at logging calls
enable-extensions=H106,H203,H904
show-source = true
builtins = _
exclude = ./.*,build,dist,networking_bigswitch/openstack/common/*

[testenv:pylint]
basepython = python3
deps =
  {[testenv]deps}
  pylint
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:networking_bigswitch}

[hacking]
import_exceptions = neutron._i18n
local-check-factory = neutron_lib.hacking.checks.factory

[testenv:dev]
basepython = python3
# run locally (not in the gate) using editable mode
# https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs
commands =
    pip install -q -e "git+https://git.openstack.org/openstack/tap-as-a-service#egg=tap_as_a_service"
    pip install -q -e "git+https://git.openstack.org/openstack/neutron#egg=neutron"

[testenv:py27-dev]
basepython = python2.7
commands =
    {[testenv:dev]commands}
    {[testenv]commands}

[testenv:py35-dev]
basepython = python3.5
commands =
    {[testenv:dev]commands}
    {[testenv]commands}

[testenv:py36-dev]
basepython = python3.6
commands =
    {[testenv:dev]commands}
    {[testenv]commands}

[testenv:pep8-dev]
basepython = python3
commands =
    {[testenv:dev]commands}
    {[testenv:pep8]commands}
